@using OcrApp.Client.Redux.Actions
@using OcrApp.Client.Redux.State
@using OcrApp.Shared
@using Fluxor
@using Blazored.Toast.Services
@using System

@page "/api-keys"
@inherits FluxorPage

@inject IState<ApiKeyState> ApiKeyState
@inject IDispatcher Dispatcher
@inject IToastService ToastService
@inject IJSRuntime JSRuntime

<PageTitle>API Keys Management</PageTitle>

<div class="transition-colors duration-300 py-4">
    <div class="container mx-auto px-4">
        <div class="flex flex-col gap-6">
            <!-- Header -->
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">
                <h1 class="text-xl font-semibold text-gray-700 dark:text-gray-200">🔑 API Keys Management</h1>
                <p class="text-gray-600 dark:text-gray-400 mt-2">Create and manage your API keys for programmatic access to the Magic Document Scanner</p>
            </div>

            <!-- Main Content -->
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">
                <!-- Create New API Key Section -->
                <div class="mb-8">
                    <h2 class="text-lg font-medium text-gray-700 dark:text-gray-300 mb-4">Create New API Key</h2>

                    <div class="bg-gray-50 dark:bg-gray-900 rounded-lg p-4">
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <!-- Key Name -->
                            <div class="col-span-2">
                                <label for="keyName" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Key Name</label>
                                <input type="text"
                                       id="keyName"
                                       @bind="@_newKeyName"
                                       class="w-full p-2 text-sm text-gray-700 dark:text-gray-300 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 focus:outline-none focus:ring-1 focus:ring-gray-500 dark:focus:ring-gray-400"
                                       placeholder="Enter a name for your API key" />
                            </div>

                            <!-- Expiration -->
                            <div>
                                <label for="expiresAt" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Expires At (Optional)</label>
                                <input type="date"
                                       id="expiresAt"
                                       @bind="@_expirationDate"
                                       min="@DateTime.Now.ToString("yyyy-MM-dd")"
                                       class="w-full p-2 text-sm text-gray-700 dark:text-gray-300 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 focus:outline-none focus:ring-1 focus:ring-gray-500 dark:focus:ring-gray-400" />
                            </div>
                        </div>

                        <div class="mt-4">
                            <button @onclick="CreateApiKey"
                                    disabled="@(ApiKeyState.Value.IsCreating || string.IsNullOrWhiteSpace(_newKeyName))"
                                    class="cursor-pointer inline-flex items-center justify-center px-4 py-2 bg-gray-700 dark:bg-gray-600 text-white rounded-md hover:bg-gray-800 dark:hover:bg-gray-700 focus:outline-none disabled:opacity-50 disabled:cursor-not-allowed">
                                @if (ApiKeyState.Value.IsCreating)
                                {
                                    <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                                    <span>Creating...</span>
                                }
                                else
                                {
                                    <svg class="w-5 h-5 mr-2" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                        <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 4v16m-8-8h16" color="currentColor" />
                                    </svg>
                                    <span>Create API Key</span>
                                }
                            </button>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(ApiKeyState.Value.NewKeyValue))
                    {
                        <div class="mt-4 p-4 border border-green-200 bg-green-50 dark:border-green-800 dark:bg-green-900 rounded-lg">
                            <div class="flex items-center justify-between mb-2">
                                <h3 class="text-md font-medium text-green-700 dark:text-green-300">Your New API Key</h3>
                                <button @onclick="CopyApiKey" class="cursor-pointer text-sm text-green-600 dark:text-green-400 hover:text-green-800 dark:hover:text-green-200 focus:outline-none">
                                    <div class="flex items-center">
                                        <svg class="w-4 h-4 me-2" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                            <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" color="currentColor">
                                                <path d="M9 15c0-2.828 0-4.243.879-5.121C10.757 9 12.172 9 15 9h1c2.828 0 4.243 0 5.121.879C22 10.757 22 12.172 22 15v1c0 2.828 0 4.243-.879 5.121C20.243 22 18.828 22 16 22h-1c-2.828 0-4.243 0-5.121-.879C9 20.243 9 18.828 9 16z" />
                                                <path d="M17 9c-.003-2.957-.047-4.489-.908-5.538a4 4 0 0 0-.554-.554C14.43 2 12.788 2 9.5 2c-3.287 0-4.931 0-6.038.908a4 4 0 0 0-.554.554C2 4.57 2 6.212 2 9.5c0 3.287 0 4.931.908 6.038a4 4 0 0 0 .554.554c1.05.86 2.58.906 5.538.908" />
                                            </g>
                                        </svg>
                                        Copy
                                    </div>
                                </button>
                            </div>
                            <p class="text-sm text-gray-600 dark:text-gray-400 mb-2">Make sure to copy your API key now. You won't be able to see it again!</p>
                            <div class="bg-white dark:bg-gray-800 p-3 rounded-md border border-gray-200 dark:border-gray-700 font-mono text-sm break-all dark:text-white">
                                @ApiKeyState.Value.NewKeyValue
                            </div>
                            <div class="mt-4 text-right">
                                <button @onclick="DismissNewKeyNotice" class="cursor-pointer text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 focus:outline-none">
                                    Dismiss
                                </button>
                            </div>
                        </div>
                    }
                </div>

                <!-- API Keys List -->
                <div>
                    <div class="flex items-center justify-between mb-4 mt-4">
                        <h2 class="text-lg font-medium text-gray-700 dark:text-gray-300">Your API Keys</h2>
                        <button @onclick="LoadApiKeys"
                                disabled="@ApiKeyState.Value.IsLoading"
                                class="cursor-pointer inline-flex items-center px-3 py-1 bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-300 dark:hover:bg-gray-600 text-sm focus:outline-none disabled:opacity-50">
                            
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 me-2" width="24" height="24" viewBox="0 0 24 24">
                                <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.01 2v3.132a.314.314 0 0 1-.556.201A9.98 9.98 0 0 0 12 2C6.477 2 2 6.477 2 12s4.477 10 10 10s10-4.477 10-10" color="currentColor" />
                            </svg>
                            <span>Refresh</span>
                        </button>
                    </div>

                    @if (ApiKeyState.Value.IsLoading)
                    {
                        <div class="flex justify-center items-center p-8">
                            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-700 dark:border-gray-300"></div>
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(ApiKeyState.Value.Error))
                    {
                        <div class="p-4 bg-red-50 dark:bg-red-900 text-red-700 dark:text-red-300 rounded-lg">
                            <p>@ApiKeyState.Value.Error</p>
                        </div>
                    }
                    else if (ApiKeyState.Value.ApiKeys.Count == 0)
                    {
                        <div class="bg-gray-50 dark:bg-gray-900 rounded-lg p-4 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.5 20h-2c-3.759 0-5.638 0-6.893-.99a4.4 4.4 0 0 1-.554-.523C2 17.307 2 15.537 2 12s0-5.306 1.053-6.487q.253-.284.554-.522C4.862 4 6.741 4 10.5 4h3c3.759 0 5.638 0 6.892.99q.302.24.555.523C21.896 6.577 21.99 8.118 22 11M2 9h20m0 5l-6 6m6 0l-6-6" color="currentColor" />
                            </svg>
                         
                            <h3 class="mt-2 text-sm font-medium text-gray-700 dark:text-gray-300">No API keys found</h3>
                            <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Get started by creating a new API key.</p>
                        </div>
                    }
                    else
                    {
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                                <thead class="bg-gray-50 dark:bg-gray-900">
                                    <tr>
                                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Name</th>
                                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Created</th>
                                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Expires</th>
                                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Status</th>
                                        <th scope="col" class="px-4 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Actions</th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                                    @foreach (var apiKey in ApiKeyState.Value.ApiKeys)
                                    {
                                        <tr>
                                            <td class="px-4 py-3 text-sm text-gray-700 dark:text-gray-300">@apiKey.Name</td>
                                            <td class="px-4 py-3 text-sm text-gray-700 dark:text-gray-300">@apiKey.CreatedAt?.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                                            <td class="px-4 py-3 text-sm text-gray-700 dark:text-gray-300">
                                                @(apiKey.ExpiresAt.HasValue ? apiKey.ExpiresAt.Value.ToLocalTime().ToString("yyyy-MM-dd") : "Never")
                                            </td>
                                            <td class="px-4 py-3 text-sm">
                                                @if (apiKey.IsActive)
                                                {
                                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100">
                                                        Active
                                                    </span>
                                                }
                                                else if (apiKey.IsActive == false)
                                                {
                                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100">
                                                        Revoked
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100">
                                                        Expired
                                                    </span>
                                                }
                                            </td>
                                            <td class="px-4 py-3 text-sm text-right">
                                                @if (apiKey.IsActive)
                                                {
                                                    <button @onclick="() => RevokeApiKey(apiKey.Id)"
                                                            class="cursor-pointer text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-300 focus:outline-none">
                                                        Revoke
                                                    </button>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>

            <!-- Help Section -->
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">
                <h2 class="text-lg font-medium text-gray-700 dark:text-gray-300 mb-4">How to use API Keys</h2>

                <div class="text-sm text-gray-600 dark:text-gray-400 space-y-4">
                    <div>
                        <h3 class="font-medium text-gray-700 dark:text-gray-300 mb-2">Authentication</h3>
                        <p>Include your API key in the request headers:</p>
                        <div class="bg-gray-50 dark:bg-gray-900 p-3 rounded-md font-mono text-sm mt-2">
                            X-API-Key: your_api_key_here
                        </div>
                    </div>
                    <div>
                        <h3 class="font-medium text-gray-700 dark:text-gray-300 mb-2">Example API Request</h3>
                        <div class="bg-gray-50 dark:bg-gray-900 p-3 rounded-md font-mono text-sm mt-2">
<pre>curl -X POST https://your-domain.com/api/scan \
  -H "X-API-Key: your_api_key_here" \
  -F "file=@@document.pdf"</pre>
                        </div>
                    </div>

                    <div>
                        <h3 class="font-medium text-gray-700 dark:text-gray-300 mb-2">Security Recommendations</h3>
                        <ul class="list-disc pl-6 space-y-1">
                            <li>Keep your API keys secure and never expose them in client-side code.</li>
                            <li>Create separate API keys for different applications or purposes.</li>
                            <li>Set expiration dates for keys that should have limited lifetimes.</li>
                            <li>Revoke keys immediately if they are compromised.</li>
                        </ul>
                    </div>

                    <div>
                        <h3 class="font-medium text-gray-700 dark:text-gray-300 mb-2">API Documentation</h3>
                        <p>Explore our complete API documentation:</p>
                        <div class="mt-2">
                            <a href="/scalar" 
                               class="inline-flex items-center px-4 py-2 bg-gray-700 dark:bg-gray-600 text-white rounded-md hover:bg-gray-800 dark:hover:bg-gray-700 focus:outline-none">
                                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mr-2" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
                                    <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
                                </svg>
                                Scalar API Reference
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string _newKeyName = string.Empty;
    private DateTime? _expirationDate = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadApiKeys();
    }

    private void LoadApiKeys()
    {
        Dispatcher.Dispatch(new ApiKeyActions.LoadApiKeysAction());
    }

    private void CreateApiKey()
    {
        if (string.IsNullOrWhiteSpace(_newKeyName))
        {
            ToastService.ShowWarning("Please enter a name for your API key");
            return;
        }

        Dispatcher.Dispatch(new ApiKeyActions.CreateApiKeyAction(_newKeyName, _expirationDate));
        _newKeyName = string.Empty;
        _expirationDate = null;
    }

    private void RevokeApiKey(string id)
    {
        Dispatcher.Dispatch(new ApiKeyActions.RevokeApiKeyAction(id));
    }

    private async Task CopyApiKey()
    {
        if (!string.IsNullOrEmpty(ApiKeyState.Value.NewKeyValue))
        {
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", ApiKeyState.Value.NewKeyValue);
            ToastService.ShowSuccess("API key copied to clipboard");
        }
    }

    private void DismissNewKeyNotice()
    {
        Dispatcher.Dispatch(new ApiKeyActions.ClearNewKeyValueAction());
    }
}